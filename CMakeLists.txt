# Define cmake minimum version
CMAKE_MINIMUM_REQUIRED(VERSION 3.20 FATAL_ERROR)

# Project settings
PROJECT(MyTemplate VERSION 0.1 LANGUAGES CXX)
MESSAGE(STATUS "Project: ${PROJECT_NAME} ${PROJECT_VERSION}")

# Set the default install path prefix
IF (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    SET(CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}" CACHE PATH "INSTALL PREFIX" FORCE)
ENDIF ()

# Add 'd' to the end of the lib and dll names in debug mode
SET(CMAKE_DEBUG_POSTFIX d)

# Check C++ version
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

IF (MSVC)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /permissive-")
ENDIF ()

# Set the output directories
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/build/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/build/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/build/bin")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/build/lib")

# Turn on VS folders
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

INCLUDE (FETCHCONTENT)
FETCHCONTENT_DECLARE(
        MyGit
        GIT_REPOSITORY https://github.com/shimakaze09/MyGit
        GIT_TAG main
)
FetchContent_MakeAvailable(MyGit)

INIT_GIT()
UPDATE_SUBMODULES()

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/external/MyCMake/cmake")
INCLUDE (Tools)

INCLUDE_DIRECTORIES(
        "${CMAKE_SOURCE_DIR}/include"
        # $ENV{*_INCLUDE_PATH}
        # ...
)

LINK_DIRECTORIES(
        "${CMAKE_SOURCE_DIR}/lib"
        # $ENV{*_LIBRARY_PATH}
        # ...
)

ADD_SUB_DIRS_REC(src)